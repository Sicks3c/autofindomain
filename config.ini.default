# Email settings
[email]
enable_email = True
port = 465
password = Password123
sender_email = email@gmail.com
receiver_email = email@gmail.com
email_server = smtp.gmail.com
enable_programs_email = True
enable_combined_email = True

# if no results do you still want to send a notification email?
send_blank_emails = False

# do you want to send all scan files as attachments with the notification email
send_attachments = True

# Local file settings
[files]
# file containing active programs (best not to change this)
programs = ./programs.txt
#resolvers = ./resolvers.txt

# DNS updater
#[DNS]
#source = https://public-dns.info/nameserver/gb.txt

# NMAP Settings
[nmap]
# Do you want to send all new findings to nmap?
nmap_on = true

# arguments to send to nmap - DO NOT PUT SPACES BEFORE OR AFTER COMMAS
nmap_arguments = -T4,--top-ports 100

# Do you want to run nmap on new programs?  This can take a loooooooooong time if it is a large program as it will scan all discovered subdomains.
run_on_new_programs = false

# Aquatone settings
[aquatone]
# Do you want to send all new findings to aquatone?
aquatone_on = true

# The path to the web directory where you would like the HTML files from aquatone to go to
aquatone_web_path = /var/www/html/

# Path to where aquatone HTML results are hosted
aquatone_url = http://my.aquatone.example.com/

# Do you want to run nmap on new programs?  This can take a loooooooooong time if it is a large program as it will scan all discovered subdomains.
run_on_new_programs = false

# Send nmap results to aquatone?  probably leave this as true.  If set to false aquatone will do '-ports xlarge'
aquatone_nmap = true
aquatone_http_timeout = 5000

# Use custom colours
[colours]
colours = true

# General settings
[general]
# I'd recommend turning this off if you are sending the output to logs, otherwise they get big and messy
animation_on = true

# Slack settings -  this feature requires a slack app to be created, with the following permissions: chat.write, files.write, incoming-webhook.  it is also required to invite the app to the channel that will be used (in the slack channel type /invite app_name).  an slack bot oauth token is also required.  from the app page in slack select OAuth & Permissions from the menu on the left.
[slack]
send_results_to_slack = false
slack_channel = autofd
slack_oauth_token = xoxb-xxxxxxxxxxxxxxxxx-xxxxxxxxxxxx
slack_signing_secret = 4a7ab5fd678cxxxxxxxxxxxxxxxxx

# FFuF setting
[ffuf]
ffuf_on = True
ffuf_on_new = False

# nuclei settings
[nuclei]
nuclei_on = true
nuclei_on_new = false